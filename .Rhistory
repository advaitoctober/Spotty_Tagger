geom_line(aes(x=Week, y=700*as.numeric(as.character(Percent.Positive.A))), colour="blue",group = 1)+
geom_line(aes(x=Week, y=700*as.numeric(as.character(Percent.Positive.B.))), colour="green",group = 1)+
geom_line(aes(x=Week, y=700*as.numeric(as.character(X..Positive))), colour="black",group = 1)+
scale_y_continuous(sec.axis = sec_axis(~.*0.0015, name = "% positive"))+
scale_fill_manual(name = "",values=c("red", "black"),labels=c("a","b"))
mainPie = data.frame(nm,val)
nm = c('Influenza A (H3 N2)','Influenza A (H1 N1)pdm09','Influenza A (subtype unknown)','Influenza B Victoria','Influenza B Yamagata','Influenza B lineage not determined')
val = c(23775,3018,420,399,3808,1710)
nm = c('Influenza A (H3 N2)','Influenza A (H1 N1)pdm09','Influenza A (subtype unknown)','Influenza B Victoria','Influenza B Yamagata','Influenza B lineage not determined')
val = c(23775,3018,420,399,3808,1710)
mainPie = data.frame(nm,val)
ggplot(mainPie, aes(x = "", y = val, fill =val)) +
geom_col(width = 1) +
#scale_fill_manual(values = c("red", "yellow")) +
coord_polar("y", start = 0*pi / 2,direction = -1) +
labs(title = "Pac man")
ggplot(mainPie, aes(x = "", y = val, fill =val)) +
geom_col(width = 1) +
#scale_fill_manual(values = c("red", "yellow")) +
coord_polar("y", start = 0*pi / 2,direction = 1) +
labs(title = "Pac man")
ggplot(part3Data[part3Data$X.Sub.type == 'H1pdm09',], aes(x = "", y = X..of..Sub.type.Total, fill = Genetic_Group)) +
geom_col(width = 1) +
#scale_fill_manual(values = c("red", "yellow")) +
coord_polar("y", start = 0*pi / 2,direction = -1) +
labs(title = 'Influenza B Yamagata')
#Part3
part3Data = read.csv('3_piechart.csv',header = T,sep = ',',fill = TRUE)
attach(part3Data)
nm = c('Influenza A (H3 N2)','Influenza A (H1 N1)pdm09','Influenza A (subtype unknown)','Influenza B Victoria','Influenza B Yamagata','Influenza B lineage not determined')
val = c(23775,3018,420,399,3808,1710)
mainPie = data.frame(nm,val)
ggplot(mainPie, aes(x = "", y = val, fill =val)) +
geom_col(width = 1) +
#scale_fill_manual(values = c("red", "yellow")) +
coord_polar("y", start = 0*pi / 2,direction = 1) +
labs(title = "Pac man")
part3Data$X..of..Sub.type.Total = as.character(part3Data$X..of..Sub.type.Total)
part3Data$X..of..Sub.type.Total = gsub('%', '', part3Data$X..of..Sub.type.Total)
part3Data$X..of..Sub.type.Total = as.numeric(part3Data$X..of..Sub.type.Total)
part3Data$X..of..Sub.type.Total[which(is.na(part3Data$X..of..Sub.type.Total))] <- 0
ggplot(part3Data[part3Data$X.Sub.type == 'H3',], aes(x = "", y = X..of..Sub.type.Total, fill = Genetic_Group)) +
geom_col(width = 1) +
#scale_fill_manual(values = c("red", "yellow")) +
coord_polar("y", start = 0*pi / 2,direction = -1) +
labs(title = "Influenza A (H3 N2)")
ggplot(part3Data[part3Data$X.Sub.type == 'B/Victoria',], aes(x = "", y = X..of..Sub.type.Total, fill = Genetic_Group)) +
geom_col(width = 1) +
#scale_fill_manual(values = c("red", "yellow")) +
coord_polar("y", start = 0*pi / 2,direction = -1) +
labs(title = 'Influenza A (H1 N1)pdm09')
ggplot(part3Data[part3Data$X.Sub.type == 'B/Yamagata',], aes(x = "", y = X..of..Sub.type.Total, fill = Genetic_Group)) +
geom_col(width = 1) +
#scale_fill_manual(values = c("red", "yellow")) +
coord_polar("y", start = 0*pi / 2,direction = -1) +
labs(title = 'Influenza B Victoria')
ggplot(part3Data[part3Data$X.Sub.type == 'H1pdm09',], aes(x = "", y = X..of..Sub.type.Total, fill = Genetic_Group)) +
geom_col(width = 1) +
#scale_fill_manual(values = c("red", "yellow")) +
coord_polar("y", start = 0*pi / 2,direction = -1) +
labs(title = 'Influenza B Yamagata')
detach(part3Data)
ggplot(mainPie, aes(x = "", y = val, fill =val)) +
geom_col(width = 1) +
scale_fill_manual(values = c("red","orange", "yellow","lightgreen","green","darkgreen")) +
coord_polar("y", start = 0*pi / 2,direction = 1) +
labs(title = "")
ggplot(mainPie, aes(x = "", y = val, fill =val)) +
geom_col(width = 1) +
scale_fill_discrete(values = c("red","orange", "yellow","lightgreen","green","dark")) +
#scale_fill_manual(values = c("red","orange", "yellow","lightgreen","green","dark")) +
coord_polar("y", start = 0*pi / 2,direction = 1) +
labs(title = "")
plotS1 + geom_bar(aes(x = Week, y=as.numeric(as.character(Total.A))+ as.numeric(as.character(Total.B))),
fill="yellow",stat = "identity")+
geom_bar(aes(x = Week, y=as.numeric(as.character(Total.B))),fill="dark green",stat = "identity")+
geom_line(aes(x=Week, y=700*as.numeric(as.character(Percent.Positive.A))), colour="blue",group = 1)+
geom_line(aes(x=Week, y=700*as.numeric(as.character(Percent.Positive.B.))), colour="green",group = 1)+
geom_line(aes(x=Week, y=700*as.numeric(as.character(X..Positive))), colour="black",group = 1)+
scale_y_continuous("Number of Positive Specimen", sec.axis = sec_axis(~ . * 0.0015, name ="Percent Positive")) +
scale_fill_manual(name = "",values=c("red", "black"),labels=c("a","b"))
install.packages("gRain")
library(gRan)
library(gRain)
install.packages("gRbase")
library(gRbase)
install.packages("RBGL")
version
update
rm(list=ls())
library(ggplot2)
library("multtest")
library("fpc")
library("cluster")
setwd("~/Documents/GitHub/Spotty_Tagger")
tracks = read.csv('tracksMusicInfo.csv')
colsList = c('acousticness','danceability', 'duration_ms', 'energy', 'instrumentalness', 'key','liveness', 'loudness', 'mode', 'speechiness', 'tempo','time_signature', 'valence')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
trackPCA$x
trackPCADF = trackPCA$x
trackPCADF = trackPCA$x
d<- dist(trackPCADF)
d_PCA<- dist(trackPCADF)
d<- dist(trackPCADF)
hc_avg <- hclust(d, method = "average")
plot(hc_avg, main="Average Linkage",labels = tracks$genre)
data2clusters <- cutree(hc_avg,9)
hclustResultDF <- data.frame(tracks$artist,tracks$track_name,tracks$album,tracks$genre,data2clusters)
View(hclustResultDF)
View(hclustResultDF)
table(tracks$genre,data2clusters)
library("lsa")
install.packages("lsa")
library("lsa")
d = consine(trackPCADF)
d = cosine(trackPCADF)
d = cosine(tracksColFil)
dim(as.matrix(d))
d<- dist(tracksColFil)
dim(as.matrix(d))
d = dist(tracksColFil,method = "Cosine")
library("proxy")
method
d = dist(tracksColFil,method = "Cosine")
dim(as.matrix(d))
hc_avg <- hclust(d, method = "average")
plot(hc_avg, main="Average Linkage",labels = tracks$genre)
data2clusters <- cutree(hc_avg,9)
hclustResultDF <- data.frame(tracks$artist,tracks$track_name,tracks$album,tracks$genre,data2clusters)
kMeansTrk = kmeans(d,centers = 9)
table(kMeansTrk$cluster,tracks$genre)
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
ggplot(df, aes(pc1,pc2,color=kMeansTrk$cluster)) + geom_point() #+ geom_text(aes(label=artist))
artist = as.character(tracks[,'artist'])
df = data.frame(artist,pc1,pc2)
ggplot(df, aes(pc1,pc2,color=kMeansTrk$cluster)) + geom_point() #+ geom_text(aes(label=artist))
ggplot(df, aes(pc1,pc2,color=kMeansTrk$cluster)) + geom_point() + geom_text(aes(label=tracks$genre))
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$genre))
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$genre)
kMeansTrk = kmeans(d,centers = 3)
table(kMeansTrk$cluster,tracks$genre)
kMeansTrk = kmeans(d,centers = 9)
table(kMeansTrk$cluster,tracks$genre)
tracks = read.csv('dataWithLabel.csv')
colsList = c('acousticness','danceability', 'duration_ms', 'energy', 'instrumentalness', 'key','liveness', 'loudness', 'mode', 'speechiness', 'tempo','time_signature', 'valence')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
pc4 = trackPCA$x[,4]
pc5 = trackPCA$x[,5]
mood = as.character(tracks[,'mood'])
df = data.frame(artist,pc1,pc2)
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$mood))
kMeansTrk = kmeans(d,centers = 25)
table(kMeansTrk$cluster,tracks$mood)
kMeansTrk = kmeans(d,centers = 26)
table(kMeansTrk$cluster,tracks$mood)
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$mood))
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$mood)
tracks = read.csv('dataWithLabel.csv')
View(tracks)
View(tracks)
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$positivity_level))
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$positivity_level)
table(kMeansTrk$cluster,tracks$energy_level)
tracks_CLust = tracks
tracks_CLust$clust = kMeansTrk$cluster
View(tracks_CLust)
View(tracks_CLust)
tracks = read.csv('dataWithLabel.csv')
colsList = c('acousticness','danceability', 'duration_ms', 'energy', 'instrumentalness', 'key','liveness', 'loudness', 'mode', 'speechiness', 'tempo','time_signature', 'valence')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
pc4 = trackPCA$x[,4]
pc5 = trackPCA$x[,5]
track_name = as.character(tracks[,'track_name'])
artist = as.character(tracks[,'artist'])
mood = as.character(tracks[,'mood'])
df = data.frame(artist,pc1,pc2)
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$energy_level)
tracks_CLust = tracks
tracks_CLust$clust = kMeansTrk$cluster
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$positivity_level))
View(tracks_CLust)
View(tracks_CLust)
tracks_CLust[,-colsList]
tracks_CLust[,-c(colsList)]
tracks_CLust[,colsList]
tracks_CLust[,-colsList]
metaCol = c('album', 'artist', 'genre', 'track_name','clust')
tracks_CLust[,metaCol]
tracks_CLust = tracks_CLust[,metaCol]
View(tracks_CLust)
View(tracks_CLust)
ggplot(df, aes(pc1,pc2,color=as.factor(tracks$positivity_level))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
colsList = c('acousticness','danceability', 'duration_ms', 'energy', 'instrumentalness', 'key','liveness', 'loudness', 'mode', 'speechiness', 'tempo','time_signature', 'valence','positivity_level','energy_level')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
tracks = tracks[complete.cases(tracks), ]
summary(tracks)
colsList = c('acousticness','danceability', 'duration_ms', 'energy', 'instrumentalness', 'key','liveness', 'loudness', 'mode', 'speechiness', 'tempo','time_signature', 'valence','positivity_level','energy_level')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
pc4 = trackPCA$x[,4]
pc5 = trackPCA$x[,5]
track_name = as.character(tracks[,'track_name'])
artist = as.character(tracks[,'artist'])
mood = as.character(tracks[,'mood'])
df = data.frame(artist,pc1,pc2)
kMeansTrk = kmeans(d,centers = 5)
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$energy_level)
table(kMeansTrk$cluster,tracks$energy_level)
d<- dist(tracksColFil)
d = dist(tracksColFil,method = "Cosine")
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$energy_level)
tracks_CLust = tracks
tracks_CLust$clust = kMeansTrk$cluster
metaCol = c('album', 'artist', 'genre', 'track_name','clust')
tracks_CLust = tracks_CLust[,metaCol]
View(tracks_CLust)
View(tracks_CLust)
table(kMeansTrk$cluster,tracks$energy_level)
table(kMeansTrk$cluster,tracks$positivity_level)
pc_sdata <- prcomp(tracksColFil, center = TRUE, scale = TRUE)
biplot(pc_sdata)
set.seed(123)
k.max <- 15
data <- d
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=50,iter.max = 15 )$tot.withinss})
k.max <- 2
data <- d
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=50,iter.max = 15 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
k.max <- 10
data <- d
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=50,iter.max = 15 )$tot.withinss})
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=10,iter.max = 10 )$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
save.image("~/Documents/GitHub/Spotty_Tagger/VST.RData")
hc_avg <- hclust(d, method = "average")
plot(hc_avg, main="Average Linkage",labels = tracks$genre)
plot(hc_avg, main="Average Linkage",labels = tracks$mood)
data2clusters <- cutree(hc_avg,5)
table(data2clusters,tracks$energy_level)
table(data2clusters,tracks$positivity_level)
hc_avg <- hclust(d, method = "complete")
data2clusters <- cutree(hc_avg,5)
hclustResultDF <- data.frame(tracks$artist,tracks$track_name,tracks$album,tracks$genre,data2clusters)
table(data2clusters,tracks$energy_level)
table(data2clusters,tracks$positivity_level)
rm(list=ls())
library(ggplot2)
library("multtest")
library("fpc")
library("cluster")
library("lsa")
library("proxy")
setwd("~/Documents/GitHub/Spotty_Tagger")
tracks = read.csv('dataWithLabel.csv')
tracks = read.csv('dataWithLabel1000.csv')
tracks = tracks[complete.cases(tracks), ]
summary(tracks)
colsList = c('acousticness','danceability', 'duration_ms', 'energy', 'instrumentalness', 'key','liveness', 'loudness', 'mode', 'speechiness', 'tempo','time_signature', 'valence','positivity_level','energy_level')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
pc4 = trackPCA$x[,4]
pc5 = trackPCA$x[,5]
track_name = as.character(tracks[,'track_name'])
artist = as.character(tracks[,'artist'])
mood = as.character(tracks[,'mood'])
df = data.frame(artist,pc1,pc2)
kMeansTrk = kmeans(d,centers = 5)
d<- dist(tracksColFil)
d = dist(tracksColFil,method = "Cosine")
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$energy_level)
table(kMeansTrk$cluster,tracks$mood)
table(kMeansTrk$cluster,tracks$genre)
tracks_CLust$clust = kMeansTrk$cluster
metaCol = c('album', 'artist', 'genre', 'track_name','clust')
tracks_CLust = tracks_CLust[,metaCol]
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
ggplot(df, aes(pc1,pc2,color=as.factor(tracks$positivity_level))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
ggplot(df, aes(pc1,pc2,color=as.factor(tracks$energy_level))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$genre)
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
d<- dist(tracksColFil)
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$genre)
tracks_CLust = tracks
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
ggplot(df, aes(pc2,pc3,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
ggplot(df, aes(pc1,pc3,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
d = dist(tracksColFil,method = "canberra")
d
dim(as.matrix(d))
d = dist(tracksColFil,method = "Cosine")
dim(as.matrix(d))
d<- dist(tracksColFil)
dim(as.matrix(d))
d = dist(tracksColFil,method = "canberra")
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$genre)
tracks_CLust = tracks
tracks_CLust$clust = kMeansTrk$cluster
metaCol = c('album', 'artist', 'genre', 'track_name','clust')
tracks_CLust = tracks_CLust[,metaCol]
ggplot(df, aes(pc1,pc3,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
d = dist(tracksColFil,method = "minkowski")
dim(as.matrix(d))
d = dist(tracksColFil,method = "minkowski")
d = dist(tracksColFil,method = "binary")
d
dim(as.matrix(d))
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$genre)
tracks_CLust = tracks
tracks_CLust$clust = kMeansTrk$cluster
metaCol = c('album', 'artist', 'genre', 'track_name','clust')
tracks_CLust = tracks_CLust[,metaCol]
ggplot(df, aes(pc1,pc3,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
d = dist(tracksColFil,method = "Cosine")
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$genre)
tracks_CLust = tracks
tracks_CLust$clust = kMeansTrk$cluster
metaCol = c('album', 'artist', 'genre', 'track_name','clust')
tracks_CLust = tracks_CLust[,metaCol]
ggplot(df, aes(pc1,pc3,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
d = dist(tracksColFil,method = "canberra")
kMeansTrk = kmeans(d,centers = 5)
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
d = dist(tracksColFil,method = "Cosine")
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$genre)
tracks_CLust = tracks
tracks_CLust$clust = kMeansTrk$cluster
metaCol = c('album', 'artist', 'genre', 'track_name','clust')
tracks_CLust = tracks_CLust[,metaCol]
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
set.seed(123)
k.max <- 10
data <- d
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=10,iter.max = 10 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
summary(tracks)
colsList = c('acousticness','danceability', 'energy', 'instrumentalness','liveness', 'loudness', 'speechiness', 'tempo', 'valence','positivity_level','energy_level')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
pc4 = trackPCA$x[,4]
pc5 = trackPCA$x[,5]
track_name = as.character(tracks[,'track_name'])
artist = as.character(tracks[,'artist'])
mood = as.character(tracks[,'mood'])
df = data.frame(artist,pc1,pc2)
d<- dist(tracksColFil)
d = dist(tracksColFil,method = "Cosine")
dim(as.matrix(d))
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$genre)
tracks_CLust = tracks
tracks_CLust$clust = kMeansTrk$cluster
metaCol = c('album', 'artist', 'genre', 'track_name','clust')
tracks_CLust = tracks_CLust[,metaCol]
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() #+ geom_text(aes(label=tracks$positivity_level))
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$genre))
set.seed(123)
k.max <- 10
data <- d
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=10,iter.max = 10 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
kMeansTrk = kmeans(d,centers = 4)
table(kMeansTrk$cluster,tracks$genre)
tracks_CLust = tracks
tracks_CLust$clust = kMeansTrk$cluster
metaCol = c('album', 'artist', 'genre', 'track_name','clust')
tracks_CLust = tracks_CLust[,metaCol]
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$genre))
tracksNumeric <- tracks[,c(6:18)]
pc_sdata <- prcomp(tracksColFil, center = TRUE, scale = TRUE)
biplot(pc_sdata)
hc_avg <- hclust(d, method = "average")
plot(hc_avg, main="Average Linkage",labels = tracks$genre)
kmed <- pamk(tracksColFil)
kmed$nc # getting this value as 3
library("Rtsne")
install.packages("Rtsne")
data <- tracksColFil
data_Bk <- tracks
data = data[complete.cases(data), ]
data = unique(data)
data_Bk = data_Bk[complete.cases(data_Bk), ]
data_Bk = unique(data_Bk)
data <- tracksColFil
data_Bk <- tracks
track.measures <- c("acousticness","danceability","duration_ms","energy",
nrow(data_Bk)
data <- tracksColFil
data_Bk <- tracks
nrow(data_Bk)
nrow(data)
data <- data[,track.measures]
data.scaled <- data
data.scaled <- scale(data)
Labels <-data$genre
colors  = rainbow(length(unique(Labels)))
names(colors) = unique(Labels)
data.scaled = data.scaled[complete.cases(data.scaled), ]
tsne <- Rtsne(data.scaled, dims = , perplexity=30, verbose=TRUE, max_iter = 2000,check_duplicates = FALSE)
library("Rtsne")
tsne <- Rtsne(data.scaled, dims = 5, perplexity=30, verbose=TRUE, max_iter = 2000,check_duplicates = FALSE)
dfts = data.frame(pc1=tsne$Y[,1],pc2=tsne$Y[,2])
ggplot(dfts, aes(pc1,pc2,color=as.factor(data_Bk$mood))) + geom_point() #+geom_text(aes(label=data_Bk$genre))
ggplot(dfts, aes(pc1,pc2,color=as.factor(data_Bk$genre))) + geom_point() #+geom_text(aes(label=data_Bk$genre))
d = dist(tsne$Y)
dim(as.matrix(d))
dim(as.matrix(tsne$Y))
set.seed(123)
k.max <- 10
data <- d
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=10,iter.max = 10 )$tot.withinss})
wss
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,data_Bk$energy_level)
table(kMeansTrk$cluster,data_Bk$positivity_level)
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() #+geom_text(aes(label=data_Bk$genre))
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$genre))
tracks_CLust$clust = kMeansTrk$cluster
metaCol = c('album', 'artist', 'genre', 'track_name','clust')
tracks_CLust = tracks_CLust[,metaCol]
View(tracks_CLust)
View(tracks_CLust)
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$track_name))
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$track_name))
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$genre))
ggplot(dfts, aes(pc1,pc2,color=as.factor(data_Bk$genre))) + geom_point() #+geom_text(aes(label=data_Bk$genre))
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$genre))
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$track_name))
quartz()
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$track_name))
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$genre))
quartz()
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$genre))
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$track_name))
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$track_name))
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$track_name))
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$genre))
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$track_name))
View(dfts)
View(dfts)
View(data_Bk)
View(data_Bk)
save.image("~/Documents/GitHub/Spotty_Tagger/limited_data.RData")
ggplot(dfts, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() +geom_text(aes(label=data_Bk$genre))
