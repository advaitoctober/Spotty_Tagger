setwd('C:/DragonBallZ/Spring2018/STA546/ProjectProposal')
library(ggplot2)
tracks = read.csv('RockMusicInfo.csv')
summary(tracks)
colsList = c('acousticness','danceability', 'energy', 'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo', 'valence')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
rockType = as.character(tracks[,'genre'])
df = data.frame(rockType,pc1,pc2)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
pc_ex2 <- prcomp(tracksColFil, scale = TRUE)
biplot(pc_ex2)
pc_ex2 <- prcomp(tracksColFil) #, scale = TRUE)
biplot(pc_ex2)
pc_ex2 <- prcomp(tracksColFil) , scale = TRUE)
pc_ex2 <- prcomp(tracksColFil, scale = TRUE)
biplot(pc_ex2)
biplot(pc_ex2,col)
par(mfrow=c(1,2))
biplot(pc_ex2,col)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
par(mfrow=c(1,2))
biplot(pc_ex2)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
par(mfrow=c(2,2))
biplot(pc_ex2)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
par(mfrow=c(2,2))
biplot(pc_ex2)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
biplot(pc_ex2)
biplot(pc_ex2)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc1,pc3, color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc2,pc3, color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc1,pc3, color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc1,pc2, color=rockType)) + geom_point() + geom_text(aes(label=rockType))
pc_ex2 <- prcomp(tracksColFil)#, scale = TRUE)
biplot(pc_ex2)
pc_ex2 <- prcomp(tracksColFil, scale = TRUE)
pc_ex2 <- prcomp(tracksColFil, scale = TRUE)
biplot(pc_ex2)
View(df)
setwd("C:/DragonBallZ/git_Repo/Spotty_Tagger")
tracks = read.csv('dataWithLabel.csv')
rm(list=ls())
library(ggplot2)
library("multtest")
library("fpc")
library("cluster")
library("lsa")
library("proxy")
setwd("C:/DragonBallZ/git_Repo/Spotty_Tagger")
tracks = read.csv('dataWithLabel.csv')
tracks = tracks[which(tracks$genre == "Rock" | tracks$genre == "Pop"),]
summary(tracks)
colsList = c('acousticness','danceability', 'duration_ms', 'energy', 'instrumentalness', 'key','liveness', 'loudness', 'mode', 'speechiness', 'tempo','time_signature', 'valence')
colsList = c('acousticness','danceability', 'duration_ms', 'energy', 'instrumentalness', 'key','liveness', 'loudness', 'mode', 'speechiness', 'tempo','time_signature', 'valence')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
pc4 = trackPCA$x[,4]
pc5 = trackPCA$x[,5]
track_name = as.character(tracks[,'track_name'])
artist = as.character(tracks[,'artist'])
mood = as.character(tracks[,'mood'])
df = data.frame(artist,pc1,pc2)
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$mood)
kMeansTrk = kmeans(d,centers = 5)
d = dist(tracksColFil)
kMeansTrk = kmeans(d,centers = 5)
table(kMeansTrk$cluster,tracks$mood)
ggplot(df, aes(pc1,pc2,color=as.factor(kMeansTrk$cluster))) + geom_point() + geom_text(aes(label=tracks$mood))
tracksNumeric <- tracks[,c(6:18)]
pc_sdata <- prcomp(tracksColFil, center = TRUE, scale = TRUE)
biplot(pc_sdata)
d<- dist(tracksColFil)
d = dist(tracksColFil,method = "Cosine")
dim(as.matrix(d))
hc_avg <- hclust(d, method = "average")
x11()
plot(hc_avg, main="Average Linkage",labels = tracks$genre)
data2clusters <- cutree(hc_avg,9)
hclustResultDF <- data.frame(tracks$artist,tracks$track_name,tracks$album,tracks$genre,data2clusters)
sum(hclustResultDF$data2clusters == 1)
trackPCA = prcomp(scaledDF)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
hclustResultDF <- data.frame(tracks$artist,tracks$track_name,tracks$album,tracks$genre,data2clusters)
sum(hclustResultDF$data2clusters == 1)
trackPCA = prcomp(scaledDF)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
artist = as.character(tracks[,'artist'])
df = data.frame(artist,pc1,pc2)
plot(df$pc1,df$pc2)
with(df, text(pc1~pc2, labels = artist), pos = 4)
text(pc1 ~ pc2, labels=artist, cex= 0.7)
ggplot(df, aes(pc1,pc2)) + geom_point() + geom_text(aes(label=artist))
summary(tracksColFil)
kmed <- pamk(tracksColFil)
kmed$nc # getting this value as 3
table(kmed$pamobject$clustering, tracks$genre)
kmed9DF = data.frame(kmed$pamobject$clustering,tracks$artist,tracks$genre,tracks$album,tracks$track_name)
layout(matrix(c(1,2),1,2))
plot(kmed$pamobject)
trackPCADF = trackPCA$x
d<- dist(trackPCADF )
d = cosine(trackPCADF)
kmed <- pamk(tracksColFil)
kmed$nc # getting this value as 3
table(kmed$pamobject$clustering, tracks$genre)
summary(tracksColFil)
table(kmed$pamobject$clustering, tracks$genre)
kmed9DF = data.frame(kmed$pamobject$clustering,tracks$artist,tracks$genre,tracks$album,tracks$track_name)
layout(matrix(c(1,2),1,2))
plot(kmed$pamobject)
ggplot(df, aes(pc1,pc2)) + geom_point() + geom_text(aes(label=artist))
text(pc1 ~ pc2, labels=artist, cex= 0.7)
plot(df$pc1,df$pc2)
with(df, text(pc1~pc2, labels = artist), pos = 4)
hclustResultDF <- data.frame(tracks$artist,tracks$track_name,tracks$album,tracks$genre,data2clusters)
plot(df$pc1,df$pc2)
ggplot(df, aes(pc1,pc2)) + geom_point() + geom_text(aes(label=artist))
plot(kmed$pamobject)
install.packages("Rtsne")
library("Rtsne")
rm(list=ls())
library(ggplot2)
library("multtest")
library("fpc")
library("cluster")
library("lsa")
library("proxy")
library("Rtsne")
setwd("C:/DragonBallZ/git_Repo/Spotty_Tagger")
tracks = read.csv('dataWithLabel.csv')
tracks = tracks[which(tracks$genre == "Rock" | tracks$genre == "Pop"),]
summary(tracks)
tracks = read.csv('dataWithLabel.csv')
View(tracks)
rm(list=ls())
library(ggplot2)
library("multtest")
library("fpc")
library("cluster")
library("lsa")
library("proxy")
library("Rtsne")
setwd("C:/DragonBallZ/git_Repo/Spotty_Tagger")
tracks = read.csv('dataWithLabel.csv')
View(tracks)
rm(list=ls())
library("Rtsne")
setwd("C:/DragonBallZ/git_Repo/Spotty_Tagger")
tracks = read.csv('tracksMusicInfo.csv')
summary(tracks)
colsList = c('acousticness','danceability', 'energy', 'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo', 'valence')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
pc4 = trackPCA$x[,4]
pc5 = trackPCA$x[,5]
artist = as.character(tracks[,'track_name'])
artist = as.character(tracks[,'artist'])
df = data.frame(artist,pc1,pc2)
ggplot(df, aes(pc4,pc5,color=tracks$genre)) + geom_point() #+ geom_text(aes(label=artist))
ggplot(df, aes(pc1,pc2,color=tracks$genre)) + geom_point() #+ geom_text(aes(label=artist))
colors = rainbow(length(unique(tracks$genre)))
names(colors) = unique(train$genre)
colors = rainbow(length(unique(tracks$genre)))
names(colors) = unique(tracks$genre)
tsne <- Rtsne(tracksNumeric, dims = 2, perplexity=30, verbose=TRUE, max_iter = 50)
tracksColFil = tracks[,colsList]
tsne <- Rtsne(tracksColFil, dims = 2, perplexity=30, verbose=TRUE, max_iter = 50)
tracks = tracks[complete.cases(tracks), ]
colors = rainbow(length(unique(tracks$genre)))
names(colors) = unique(tracks$genre)
colsList = c('acousticness','danceability', 'energy', 'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo', 'valence')
tracksColFil = tracks[,colsList]
names(colors) = unique(tracks$genre)
tsne <- Rtsne(tracksColFil, dims = 2, perplexity=30, verbose=TRUE, max_iter = 50)
tsne <- Rtsne(tracksColFil, dims = 2, perplexity=30, verbose=TRUE, max_iter = 50 ,check_duplicates = FALSE)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=tracks$genre, col=colors[tracks$genre])
tracks = tracks[complete.cases(tracks), ]
colors = rainbow(length(unique(tracks$genre)))
colsList = c('acousticness','danceability', 'energy', 'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo', 'valence')
tracksColFil = tracks[,colsList]
names(colors) = unique(tracks$genre)
tsne <- Rtsne(tracksColFil, dims = 2, perplexity=30, verbose=TRUE, max_iter = 500 ,check_duplicates = FALSE)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=tracks$genre, col=colors[tracks$genre])
tsne <- Rtsne(tracksColFil, dims = 2, perplexity=30, verbose=TRUE, max_iter = 1000 ,check_duplicates = FALSE)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=tracks$genre, col=colors[tracks$genre])
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y,  col=colors[tracks$genre])
View(df)
View(tracks)
tracks = tracks[which(tracks$genre != "K-Pop")]
tracks = tracks[which(tracks$genre != "K-Pop"),]
View(tracks)
tracks = tracks[which(tracks$genre != "K-pop"),]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
pc4 = trackPCA$x[,4]
pc5 = trackPCA$x[,5]
artist = as.character(tracks[,'track_name'])
artist = as.character(tracks[,'artist'])
df = data.frame(artist,pc1,pc2)
df = data.frame(artist,pc1,pc2)
artist = as.character(tracks[,'track_name'])
artist = as.character(tracks[,'artist'])
df = data.frame(artist,pc1,pc2)
tracks = tracks[which(tracks$genre != "K-pop"),]
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
pc4 = trackPCA$x[,4]
pc5 = trackPCA$x[,5]
artist = as.character(tracks[,'track_name'])
artist = as.character(tracks[,'artist'])
df = data.frame(artist,pc1,pc2)
ggplot(df, aes(pc1,pc2,color=tracks$genre)) + geom_point() #+ geom_text(aes(label=artist))
tracks = tracks[complete.cases(tracks), ]
colors = rainbow(length(unique(tracks$genre)))
colsList = c('acousticness','danceability', 'energy', 'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo', 'valence')
tracksColFil = tracks[,colsList]
names(colors) = unique(tracks$genre)
tsne <- Rtsne(tracksColFil, dims = 2, perplexity=30, verbose=TRUE, max_iter = 1000 ,check_duplicates = FALSE)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=tracks$genre, col=colors[tracks$genre])
tsne <- Rtsne(tracksColFil, dims = 2, perplexity=30, verbose=TRUE, max_iter = 500 ,check_duplicates = FALSE)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=tracks$genre, col=colors[tracks$genre])
tsne <- Rtsne(tracksColFil, dims = 3, perplexity=30, verbose=TRUE, max_iter = 500 ,check_duplicates = FALSE)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=tracks$genre, col=colors[tracks$genre])
tsne <- Rtsne(tracksColFil, dims = 4, perplexity=30, verbose=TRUE, max_iter = 500 ,check_duplicates = FALSE)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=tracks$genre, col=colors[tracks$genre])
tsne <- Rtsne(tracksColFil, dims = 2, perplexity=30, verbose=TRUE, max_iter = 500 ,check_duplicates = FALSE)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=tracks$genre, col=colors[tracks$genre])
tsne <- Rtsne(tracksColFil, dims = 2, perplexity=50, verbose=TRUE, max_iter = 500 ,check_duplicates = FALSE)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=tracks$genre, col=colors[tracks$genre])
tsne <- Rtsne(tracksColFil, dims = 2, perplexity=30, verbose=TRUE, max_iter = 500 ,check_duplicates = FALSE)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=tracks$genre, col=colors[tracks$genre])
