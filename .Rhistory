pairs(college[,1:10])
rm(list = ls())
setwd('C:/DragonBallZ/Spring2018/STA546')
college <- read.csv('College.csv', header = TRUE, sep = ",")
fix(college)
rownames(college)= college [,1]
college = college [,-1]
summary(college)
pairs(college[,1:10])
names(college)
boxplot(college$Outstate ~ college$Private, data=college , main = "BoxPlot of Outstate and Private")
Elite = rep ("No", nrow(college))
Elite [college$Top10perc >50]="Yes"
Elite =as.factor(Elite)
college = data.frame(college,Elite)
summary(college)
boxplot(college$Outstate ~ college$Elite, data=college , main = "BoxPlot of Outstate and Elite")
collegeE <- subset(college,Elite=='Yes')
collegeNE <- subset(college,Elite=='No')
par(mfrow=c(1,2))
hist(collegeNE$PhD, main = 'Hist of PhD freq for Non Elite schools')
hist(collegeE$PhD, main = 'Hist of PhD freq for Elite schools')
par(mfrow=c(1,2))
hist(collegeNE$Accept/collegeNE$Apps, main = 'Hist of % Accept for Non Elite schools')
hist(collegeE$Accept/collegeE$Apps, main = 'Hist of % Accept for Elite schools')
mean(collegeNE$Grad.Rate)
mean(collegeE$Grad.Rate)
mean(collegeNE$Expend)
mean(collegeE$Expend)
setwd('C:\DragonBallZ\Spring2018\STA546\ProjectProposal')
setwd('C:/DragonBallZ/Spring2018/STA546/ProjectProposal')
tracks = read.csv('RockMusicInfo.csv')
rm(list=ls())
setwd('C:/DragonBallZ/Spring2018/STA546/ProjectProposal')
tracks = read.csv('RockMusicInfo.csv')
summary(tracks)
colsList = c('acousticness','danceability', 'duration_ms', 'energy', 'instrumentalness', 'key','liveness', 'loudness', 'mode', 'speechiness', 'tempo','time_signature', 'valence')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
rockType = as.character(tracks[,'genre'])
df = data.frame(rockType,pc1,pc2)
plot(df$pc1,df$pc2)
with(df, text(pc1~pc2, labels = artist), pos = 4)
with(df, text(pc1~pc2, labels = rockType), pos = 4)
plot(df$pc1,df$pc2)
with(df, text(pc1~pc2, labels = rockType), pos = 4)
text(pc1 ~ pc2, labels=rockType, cex= 0.7)
ggplot(df, aes(pc1,pc2)) + geom_point() + geom_text(aes(label=rockType))
library(ggplot2)
ggplot(df, aes(pc1,pc2)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
summary(tracksColFil)
biplot(trackPCA)
pc_ex3 <- prcomp(scale(tracks), center = FALSE, scale = FALSE)
pc_ex2 <- prcomp(wines, center = TRUE, scale = TRUE)
data(wines)
library(kohonen)
data(wines)
View(wines)
pc_ex2 <- prcomp(tracksColFil, center = TRUE, scale = TRUE)
plot(pc_ex2)
biplot(pc_ex2)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
pc_ex2 <- prcomp(tracksColFil, center = TRUE, scale = TRUE)
biplot(pc_ex2)
biplot(pc_ex2,col = as.factor(tracks$genre))
biplot(pc_ex2,text = as.factor(tracks$genre))
biplot(pc_ex2,text = tracks$genre)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
pc3 = trackPCA$x[,3]
ggplot(df, aes(pc1,pc3 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc2,pc3 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc1,pc3 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
pc_ex2 <- prcomp(tracksColFil, center = TRUE, scale = TRUE)
biplot(pc_ex2,text = tracks$)
biplot(pc_ex2)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
pc_ex2 <- prcomp(tracksColFil, center = TRUE, scale = TRUE)
biplot(pc_ex2)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
pc_ex2 <- prcomp(tracksColFil, scale = TRUE)
biplot(pc_ex2)
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
pc_ex2 <- prcomp(tracksColFil)
biplot(pc_ex2)
pc_ex2 <- prcomp(tracksColFil, scale = TRUE)
biplot(pc_ex2)
ggplot(scale(df), aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc2,pc3 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc1,pc3 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
biplot(princomp(tracksColFil),choices=c(1,3))
biplot(princomp(tracksColFil),choices=c(1,3))
colsList = c('acousticness','danceability', 'energy', 'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo', 'valence')
rm(list=ls())
setwd('C:/DragonBallZ/Spring2018/STA546/ProjectProposal')
library(ggplot2)
tracks = read.csv('RockMusicInfo.csv')
summary(tracks)
colsList = c('acousticness','danceability', 'energy', 'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo', 'valence')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
rockType = as.character(tracks[,'genre'])
df = data.frame(rockType,pc1,pc2)
plot(df$pc1,df$pc2)
with(df, text(pc1~pc2, labels = rockType), pos = 4)
text(pc1 ~ pc2, labels=rockType, cex= 0.7)
ggplot(df, aes(pc1,pc3 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
ggplot(df, aes(pc1,pc2 , color=rockType)) + geom_point() + geom_text(aes(label=rockType))
rm(list=ls())
library(ggplot2)
library("multtest")
library("fpc")
library("cluster")
setwd("C:/DragonBallZ/git_Repo/Spotty_Tagger")
tracks = read.csv('tracksMusicInfo.csv')
summary(tracks)
colsList = c('acousticness','danceability', 'energy', 'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo', 'valence')
tracksColFil = tracks[,colsList]
trackPCA = prcomp(tracksColFil)
pc1 = trackPCA$x[,1]
pc2 = trackPCA$x[,2]
pc3 = trackPCA$x[,3]
pc4 = trackPCA$x[,4]
pc5 = trackPCA$x[,5]
artist = as.character(tracks[,'track_name'])
artist = as.character(tracks[,'artist'])
df = data.frame(artist,pc1,pc2)
plot(df$pc1,df$pc2)
with(df, text(pc1~pc2, labels = artist), pos = 4)
ggplot(df, aes(pc4,pc5,color=tracks$genre)) + geom_point() #+ geom_text(aes(label=artist))
d = dist(tracksColFil)
kMeansTrk = kmeans(d,centers = 9)
table(kMeansTrk$cluster,tracks$genre)
plot(kMeansTrk)
plot(kMeansTrk$centers)
