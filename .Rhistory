sample.int(100,500,replace = T)
sample(1:20,6)
runif(8,1,50)
rnorm(10,mean = 0 , sd = 1)
colC <-rnorm(10,mean = 0 , sd = 1)
set.seed(10)
colC <-rnorm(10,mean = 0 , sd = 1)
colA <- runif(10,1,20)
colB <- sample(1:100,10, replace = T)
colD <- sample(state.name,10,replace=T)
df <- data.frame(colA,colB,colC,colD)
df
df$colE <- df$colA * df$colB
df
mean(df$colE)
sum(df$colE)
rm(list = ls())
install.packages("tm")
library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)
stext <- readLines(file.choose())
rm(list = ls())
library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)
stext <- readLines(file.choose())
doc <- Corpus(VectorSource((stext)))
inspect(doc)
toSpace <- content_transformer(function (x, pattern) gsub(pattern, " ", x))
doc <- tm_map(doc, toSpace, "/")
doc <- tm_map(doc, toSpace, "@")
doc <- tm_map(doc, toSpace, "\\|")
doc <- tm_map(doc, toSpace, "-")
doc <- tm_map(doc ,toSpace,"#")
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeNumbers)
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removeWords, c("nada", "zilch","https"))
doc <- tm_map(doc, removePunctuation)
doc <- tm_map(doc, stripWhitespace)
doc<- tm_map(doc, stemDocument)
tdm <- TermDocumentMatrix(doc)
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
set.seed(123)
wordcloud(words = d$word, freq = d$freq , min.freq = 1, max.words = 500,
random.order = FALSE, rot.per = 0.15,colors = brewer.pal(8,"Dark2"))
stext <- readLines(file.choose())
rm(list = ls())
library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)
stext <- readLines(file.choose())
doc <- Corpus(VectorSource((stext)))
inspect(doc)
toSpace <- content_transformer(function (x, pattern) gsub(pattern, " ", x))
doc <- tm_map(doc, toSpace, "/")
doc <- tm_map(doc, toSpace, "@")
doc <- tm_map(doc, toSpace, "\\|")
doc <- tm_map(doc ,toSpace,"#")
doc <- tm_map(doc, toSpace, "-")
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeNumbers)
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removeWords, c("nada", "zilch","https"))
doc <- tm_map(doc, removePunctuation)
doc <- tm_map(doc, stripWhitespace)
doc<- tm_map(doc, stemDocument)
tdm <- TermDocumentMatrix(doc)
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
set.seed(123)
wordcloud(words = d$word, freq = d$freq , min.freq = 1, max.words = 500,
random.order = FALSE, rot.per = 0.15,colors = brewer.pal(8,"Dark2"))
rm(list = ls())
library(tm)
library(SnowballC)
library(RColorBrewer)
library(wordcloud)
stext <- readLines(file.choose())
doc <- Corpus(VectorSource((stext)))
inspect(doc)
toSpace <- content_transformer(function (x, pattern) gsub(pattern, " ", x))
doc <- tm_map(doc, toSpace, "/")
doc <- tm_map(doc, toSpace, "@")
doc <- tm_map(doc, toSpace, "\\|")
doc <- tm_map(doc, toSpace, "-")
doc <- tm_map(doc ,toSpace,"#")
doc <- tm_map(doc, content_transformer(tolower))
doc <- tm_map(doc, removeNumbers)
doc <- tm_map(doc, removeWords, stopwords("english"))
doc <- tm_map(doc, removeWords, c("nada", "zilch","https"))
doc <- tm_map(doc, removePunctuation)
doc <- tm_map(doc, stripWhitespace)
doc<- tm_map(doc, stemDocument)
tdm <- TermDocumentMatrix(doc)
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
set.seed(123)
wordcloud(words = d$word, freq = d$freq , min.freq = 1, max.words = 500,
random.order = FALSE, rot.per = 0.15,colors = brewer.pal(8,"Dark2"))
data(state)
sdata <- data(state)
sdata
rm(list=ls())
sData <- state
sData <- data(state)
sData <- data(state.x77)
sData <- data(state.x77)
View(state.x77)
View(state.x77)
rm(list=ls())
sData <- state.x77
View(sData)
View(sData)
View(sData)
View(sData)
km <- kmeans(sData, 2)
table(km$cluster, c('1','2'))
km$cluster
kmed <- pamk(sData)
library(cluster)
kmed <- pamk(sData)
library("multtest")
library("fpc")
library("cluster")
kmed <- pamk(sData)
kmed$nc
km$cluster
km <- kmeans(sData, 3)
km$cluster
points(km$centers, pch = 8, cex = 2)
plot(sData, col = km$cluster, main = "Example k-means") , points(km$centers, pch = 8, cex = 2)
plot(sData, col = km$cluster, main = "Example k-means")
points(km$centers, col = 1:3, pch = 8, cex = 2)
sR <- state.region
sR
sData <- cbind(sData,sR)
View(sData)
View(sData)
rm(list=ls())
library("multtest")
library("fpc")
library("cluster")
sData <- state.x77
sRegion <- state.region
sRegion
sData <- cbind(sData,sRegion)
View(sData)
km <- kmeans(sData[,-9], 4)
km$cluster
library("multtest")
library("fpc")
library("cluster")
dats <- iris[,1:4]
head(dats) # the data we want to cluster
km <- kmeans(dats, 3)
table(km$cluster, iris$Species)
plot(dats[, c("Sepal.Length", "Sepal.Width")], col = km$cluster, main = "Example k-means")
points(km$centers[ , c("Sepal.Length", "Sepal.Width")], col = 1:3, pch = 8, cex = 2)
kmed <- pamk(dats)
kmed$nc
table(kmed$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(kmed$pamobject)
kmed3 <-  pamk(dats, 3)
table(kmed3$pamobject$clustering, iris$Species)
layout(matrix(c(1,2),1,2))
plot(kmed3$pamobject)
gap_kmeans <- clusGap(dats, kmeans, nstart = 20, K.max = 10, B = 100)
gap_kmeans
plot(gap_kmeans, main = "Gap Statistic: k-means")
idx <- sample(c(1:length(dats[,1])), 60)
dats_red <- dats[idx, ]
d <- dist(dats_red)
dim(as.matrix(d))
hc <- hclust(d, method = "ave")
plot(hc, hang = -1, labels = iris$Species[idx])
plot(sData, col = km$cluster, main = "Example k-means")
points(km$centers, col = 1:3, pch = 8, cex = 2)
points(km$centers, pch = 8, cex = 2)
rm(list=ls())
library("multtest")
library("fpc")
library("cluster")
sData <- state.x77
sRegion <- state.region
sRegion
sData <- cbind(sData,sRegion)
km <- kmeans(sData[,-9], 4)
km$cluster
rm(list=ls())
library("multtest")
library("fpc")
library("cluster")
sData <- state.x77
sRegion <- state.region
sRegion
sData <- cbind(sData,sRegion)
km <- kmeans(sData[,-9], 3)
km$cluster
View(sData)
View(sData)
table(km$cluster, factor(sRe))
table(km$cluster, factor(sRegion))
plot(sData, col = km$cluster, main = "Example k-means")
points(km$centers, pch = 8, cex = 2)
points(km$centers, pch = 16, cex = 2)
plot(sData, col = km$cluster, main = "Example k-means",pch=16)
points(km$centers, pch = 8, cex = 2)
kmed <- pamk(sData)
points(km$centers, pch = 20, cex = 2)
plot(sData[,:], col = km$cluster, main = "Example k-means",pch=16)
plot(sData[,c("Population","Income")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers, pch = 20, cex = 2)
points(km$centers, pch = 25, cex = 2)
plot(sData[,c("Population","Murder")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers, pch = 25, cex = 2)
points(km$centers, pch = 25, cex = 2)
points(km$centers[ , c("Sepal.Length", "Sepal.Width")], col = 1:3, pch = 8, cex = 2)
plot(dats[, c("Sepal.Length", "Sepal.Width")], col = km$cluster, main = "Example k-means")
library("multtest")
library("fpc")
library("cluster")
dats <- iris[,1:4]
head(dats) # the data we want to cluster
km <- kmeans(dats, 3)
table(km$cluster, iris$Species)
plot(dats[, c("Sepal.Length", "Sepal.Width")], col = km$cluster, main = "Example k-means")
points(km$centers[ , c("Sepal.Length", "Sepal.Width")], col = 1:3, pch = 8, cex = 2)
points(km$centers[ , c("Sepal.Length", "Sepal.Width")], col = 1:4, pch = 8, cex = 2)
plot(dats[, c("Sepal.Length", "Petal.Width")], col = km$cluster, main = "Example k-means")
points(km$centers[ , c("Sepal.Length", "Petal.Width")], col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Income")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Income")], pch = 8, cex = 2)
points(km$centers[,c("Population","Income")], pch = 8, cex = 2)
km$centers
rm(list=ls())
library("multtest")
library("fpc")
library("cluster")
sData <- state.x77
sRegion <- state.region
sRegion
sData <- cbind(sData,sRegion)
km <- kmeans(sData[,-9], 3)
km$cluster
table(km$cluster, factor(sRegion))
plot(sData[,c("Population","Income")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Income")], pch = 8, cex = 2)
plot(sData[,c("Population","Murder")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Murder")], pch = 8, cex = 2)
points(km$centers[,c("Population","Murder")], pch = 22, cex = 2)
plot(sData[,c("Population","Murder")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Murder")], pch = 22, cex = 2)
plot(sData[,c("Population","Area")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Area")], pch = 22, cex = 2)
plot(sData[,c("Income","Life Exp")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Exp")], pch = 22, cex = 2)
points(km$centers[,c("Population","Life Exp")], pch = 22, cex = 2)
points(km$centers[,c("Population","Life Exp")], pch = 8, cex = 2)
plot(sData[,c("Illiteracy","HS Grad")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Illiteracy","HS Grad")], pch = 8, cex = 2)
plot(sData[,c("HS Grad","Illiteracy")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("HS Grad","Illiteracy")], pch = 8, cex = 2)
plot(sData[,c("Income","Murder")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Income","Murder")], pch = 8, cex = 2)
plot(sData[,c("Frost","Life Exp")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Frost","Life Exp")], pch = 8, cex = 2)
library("multtest")
library("fpc")
library("cluster")
dats <- iris[,1:4]
head(dats) # the data we want to cluster
km <- kmeans(dats, 3)
table(km$cluster, iris$Species)
plot(dats[, c("Sepal.Length", "Sepal.Width")], col = km$cluster, main = "Example k-means")
points(km$centers[ , c("Sepal.Length", "Sepal.Width")], col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Income")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Income")],col = 1:3, pch = 8, cex = 2)
rm(list=ls())
library("multtest")
library("fpc")
library("cluster")
sData <- state.x77
sRegion <- state.region
sData <- cbind(sData,sRegion)
km <- kmeans(sData[,-9], 3)
km$cluster
table(km$cluster, factor(sRegion))
plot(sData[,c("Population","Income")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Income")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Murder")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Murder")], col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Murder")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Murder")], col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Area")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Area")], pch = 8, cex = 2)
plot(sData[,c("Income","Life Exp")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Life Exp")], pch = 8, cex = 2)
plot(sData[,c("HS Grad","Illiteracy")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("HS Grad","Illiteracy")], pch = 8, cex = 2)
plot(sData[,c("Income","Murder")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Income","Murder")], pch = 8, cex = 2)
plot(sData[,c("Population","Income")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Income")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Murder")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Murder")], col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Area")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Area")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Life Exp")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Population","Life Exp")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("HS Grad","Illiteracy")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("HS Grad","Illiteracy")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Murder")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Income","Murder")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Frost","Life Exp")], col = km$cluster, main = "Example k-means",pch=16)
points(km$centers[,c("Frost","Life Exp")], col = 1:3,pch = 8, cex = 2)
library("multtest")
library("fpc")
library("cluster")
?iris
dats <- iris[,1:4]
head(dats) # the data we want to cluster
idx <- sample(c(1:length(dats[,1])), 60)
dats_red <- dats[idx, ]
d <- dist(dats_red)
dim(as.matrix(d))
hc <- hclust(d, method = "ave")
plot(hc, hang = -1, labels = iris$Species[idx])
si <- silhouette(cutree(hc, k = 5), dist = d)
summary(si)
plot(si)
store_avg_width <- c()
for (i in 2:6){
si <- silhouette(cutree(hc, k = i), dist = d)
avg_width <- summary(si)$avg.width
store_avg_width <- c(store_avg_width, avg_width)
}
store_avg_width
data(golub)
dimnames(golub)[[1]] <- golub.gnames[,3]
dimnames(golub)[[2]] <- c(paste("ALL", 1:27, sep = ":"), paste("AML", 28:38, sep = ":"))
myttest <- function(x) t.test(x[1:27], x[28:38])$p.value
p.val <- apply(golub, 1, myttest)
sorted_p <- order(p.val)
golub.order <- golub[sorted_p, ]
dim(as.matrix(golub.order))
DEgenes <- golub.order[1:250,]
heatmap(DEgenes, col = cm.colors(20), xlab = "Conditions", ylab = "Transcrips")
rm(list = ls())
library(kohonen)
boxplot(wines)
data(wines)
boxplot(wines)
pc_ex1 <- princomp(wines)
pc_ex2 <- prcomp(wines, center = TRUE, scale = TRUE)
pc_ex3 <- prcomp(scale(wines), center = FALSE, scale = FALSE)
plot(pc_ex1)
summary(pc_ex3)
Eigenvalues <- eigen(cov(scale(wines)))
Eigenvalues$values
(pc_ex3$sdev)^2 # sanity check.
biplot(pc_ex3)
boxplot(sData)
sData <- cbind(sData,sRegion)
sData <- state.x77
sRegion <- state.region
sRegion
sData <- cbind(sData,sRegion)
boxplot(sData)
pc_ex3 <- prcomp(scale(sData), center = FALSE, scale = FALSE)
plot(pc_ex3)
biplot(pc_ex3)
pc_ex3 <- prcomp(scale(sData[,-9]), center = FALSE, scale = FALSE)
plot(pc_ex3)
biplot(pc_ex3)
summary(pc_ex3)
rm(list=ls())
library("multtest")
library("fpc")
library("cluster")
sData <- state.x77
sRegion <- state.region
sRegion
sData <- cbind(sData,sRegion)
km <- kmeans(sData[,-9], 3)
km$cluster
table(km$cluster, factor(sRegion))
plot(sData[,c("Population","Income")], col = km$cluster, main = "Example k-means",pch=16)
plot(sData[,c("Population","Income")], col = km$cluster, main = "population vs income",pch=16)
points(km$centers[,c("Population","Income")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Murder")], col = km$cluster, main = "population vs murder",pch=16)
points(km$centers[,c("Population","Murder")], col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Area")], col = km$cluster, main = "population vs area",pch=16)
points(km$centers[,c("Population","Area")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Life Exp")], col = km$cluster, main = "Income and Life Expectancy",pch=16)
points(km$centers[,c("Population","Life Exp")],col = 1:3, pch = 8, cex = 2)
points(km$centers[,c("Population","Life Exp")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Life Exp")], col = km$cluster, main = "Income and Life Expectancy",pch=16)
points(km$centers[,c("Population","Life Exp")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("HS Grad","Illiteracy")], col = km$cluster, main = "Illiteracy and HS Grad",pch=16)
points(km$centers[,c("HS Grad","Illiteracy")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Life Exp")], col = km$cluster, main = "Income and Life Expectancy",pch=16)
points(km$centers[,c("Population","Life Exp")],col = 1:3, pch = 8, cex = 2)
points(km$centers[,c("Income","Life Exp")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Life Exp")], col = km$cluster, main = "Income and Life Expectancy",pch=16)
plot(sData[,c("Income","Life Exp")], col = km$cluster, main = "Income and Life Expectancy",pch=16)
points(km$centers[,c("Income","Life Exp")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Murder")], col = km$cluster, main = "Income and Murder",pch=16)
points(km$centers[,c("Income","Murder")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Life Exp")], col = km$cluster, main = "Income vs Life Expectancy",pch=16)
points(km$centers[,c("Income","Life Exp")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("HS Grad","Illiteracy")], col = km$cluster, main = "Illiteracy vs HS Grad",pch=16)
points(km$centers[,c("HS Grad","Illiteracy")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Murder")], col = km$cluster, main = "Income vs Murder",pch=16)
points(km$centers[,c("Income","Murder")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Frost","Life Exp")], col = km$cluster, main = "Frost vs Life Expectancy",pch=16)
points(km$centers[,c("Frost","Life Exp")], col = 1:3,pch = 8, cex = 2)
boxplot(sData)
boxplot(sData[,-9])
pc_ex3 <- prcomp(scale(sData[,-9]), center = FALSE, scale = FALSE)
plot(pc_ex3)
pc_ex3 <- prcomp(scale(sData[,-9]), center = FALSE, scale = FALSE , main = "PCA of the states data")
pc_ex3 <- prcomp(scale(sData[,-9]), center = FALSE, scale = FALSE)
plot(pc_ex3,main = "PCA of the states data")
biplot(pc_ex3)
?state.x77
View(sData)
View(sData)
rm(list=ls())
library("multtest")
library("fpc")
library("cluster")
?state.x77
sData <- state.x77
sRegion <- state.region
sRegion
sData <- cbind(sData,sRegion)
km <- kmeans(sData[,-9], 3)
km$cluster
table(km$cluster, factor(sRegion))
plot(sData[,c("Population","Income")], col = km$cluster, main = "population vs income",pch=16)
points(km$centers[,c("Population","Income")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Murder")], col = km$cluster, main = "population vs murder",pch=16)
points(km$centers[,c("Population","Murder")], col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Population","Area")], col = km$cluster, main = "population vs area",pch=16)
points(km$centers[,c("Population","Area")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Life Exp")], col = km$cluster, main = "Income vs Life Expectancy",pch=16)
points(km$centers[,c("Income","Life Exp")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("HS Grad","Illiteracy")], col = km$cluster, main = "Illiteracy vs HS Grad",pch=16)
points(km$centers[,c("HS Grad","Illiteracy")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Income","Murder")], col = km$cluster, main = "Income vs Murder",pch=16)
points(km$centers[,c("Income","Murder")],col = 1:3, pch = 8, cex = 2)
plot(sData[,c("Frost","Life Exp")], col = km$cluster, main = "Frost vs Life Expectancy",pch=16)
points(km$centers[,c("Frost","Life Exp")], col = 1:3,pch = 8, cex = 2)
boxplot(sData[,-9])
pc_ex3 <- prcomp(scale(sData[,-9]), center = FALSE, scale = FALSE)
plot(pc_ex3,main = "PCA of the states data")
biplot(pc_ex3)
g <- list(~Sex,~Smoker|Sex,~Inherit|Smoker,~Hyperchol|Smoker:SuffHeartF,~CAD|Inherit:Hyperchol)
dag <- dagList(g)
plot(dag)
library(gRain)
library(Rgraphviz)
library(gRbase)
library(ggm)
library(bnlearn)
library(gRim)
library(aod)
library(igraph)
library(caret)
g <- list(~Sex,~Smoker|Sex,~Inherit|Smoker,~Hyperchol|Smoker:SuffHeartF,~CAD|Inherit:Hyperchol)
dag <- dagList(g)
plot(dag)
?som
tracks = read.csv('RockMusicInfoNew.csv')
rm(list=ls())
setwd('C:/DragonBallZ/git_Repo/Spotty_Tagger')
library(ggplot2)
library("Rtsne")
tracks = read.csv('RockMusicInfoNew.csv')
summary(tracks)
colsList = c('acousticness','danceability', 'energy', 'instrumentalness', 'liveness', 'loudness', 'speechiness', 'tempo', 'valence')
View(tracks)
library(corrplot)
require(class)
require(gdata)
data <- read.csv('dataWithLabel1000.csv')
colsList = c('acousticness','danceability', 'energy', 'instrumentalness','liveness', 'loudness', 'speechiness', 'tempo', 'valence','positivity_level' , 'energy_level')
colsList = c('acousticness','danceability', 'energy', 'instrumentalness','liveness', 'loudness', 'speechiness', 'tempo', 'valence')
tracksColFil = data[,colsList]
tracksColFil$energy_level <- ifelse(is.na(tracksColFil$energy_level), 0, tracksColFil$energy_level)
pairs(tracksColFil)
corrData <- cor(tracksColFil)
corrplot(corrData, method = "circle")
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrData <- cor(tracksColFil)
corrplot(corrData, method = "circle")
corrplot(corrData, method = "number")
